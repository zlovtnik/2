syntax = "proto3";

import "google/protobuf/timestamp.proto";

package user_stats;

// Service for user statistics operations
service UserStatsService {
    // Get current user statistics using JWT token authentication
    rpc GetCurrentUserStats(GetCurrentUserStatsRequest) returns (GetCurrentUserStatsResponse);
    
    // Health check endpoint for connection pool monitoring
    rpc HealthCheck(HealthCheckRequest) returns (HealthCheckResponse);
    
    // Get connection pool metrics
    rpc GetConnectionPoolMetrics(GetConnectionPoolMetricsRequest) returns (GetConnectionPoolMetricsResponse);
}

// Request message for getting current user stats
// The JWT token will be passed via gRPC metadata (Authorization header)
message GetCurrentUserStatsRequest {
    // Empty request body - user ID will be extracted from JWT token
}

// Response message containing user information with statistics
message GetCurrentUserStatsResponse {
    string user_id = 1;
    string email = 2;
    string full_name = 3;
    optional string preferences = 4;  // JSON string, optional
    string created_at = 5;  // ISO 8601 timestamp
    string updated_at = 6;  // ISO 8601 timestamp
    int64 refresh_token_count = 7;
    optional string last_login = 8;  // ISO 8601 timestamp, optional
}

enum HealthStatus {
  HEALTH_STATUS_UNSPECIFIED = 0;
  HEALTHY = 1;
  DEGRADED = 2;
  UNHEALTHY = 3;
}

message HealthCheckRequest {
    // Empty request body
}

message HealthCheckResponse {
    HealthStatus status = 1;
    string message = 2;
    google.protobuf.Timestamp timestamp = 3;
}

message GetConnectionPoolMetricsRequest {
    // Empty request body
}

message GetConnectionPoolMetricsResponse {
    uint32 total_connections = 1;
    uint32 active_connections = 2;
    uint32 available_connections = 3;
    uint64 connection_errors = 4;
    uint64 health_check_failures = 5;
    google.protobuf.Timestamp last_health_check = 6;
}
